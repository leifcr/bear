h1. Development has stopped

Due to the number of really great CI system that has come to life over the last months, I do not see a reason to continue
development on this project. If you use it and find a bug, or want to take on the project, feel free to send me a message.

If you are going to use a CI for your projects, I would recommend Jenkins if you are setting up a inhouse server.
It is a bit "overkill", it uses tons of resources, but it is highly likely, that the plugin you need to build your project
is already made. 

If you are going to buy into a service provided CI, use travis, droid, codeship or any other ci out there. They all
have pros/cons.

I am currently useing codeship for one project, travis for some oss projects and jenkins for some windows/osx projects,
as they are easier to maintain if you are close to the hardware.

h1. About

Bear is a continuous integration software built on top of the Rails 3 framework. If you can do it through command line, Bear can handle it.

h4. Features:
  
  * Authentication through Devise
  * Projects with multiple configurations/scenarios
  * Configurations can have several steps/command lines to run
  * RSS/Atom feed to get your latest build status

I'm currently running one instance on a VPS node, and it works quite well for Ruby (Rails/Sinatra), php, and node.js projects. As well as projects using QUnit tests in browsers (Running through selenium or poltergeist).

h4. Why rename the project and drop the fork?

It wasn't longer possible to do a pull request to the original project without breaking stuff for people. It is therefore better to continue this project as a separate project instead of a fork of BigTuna.

h2. Users and projects

* A project can have many users and a user can have many projects.
* Any user can see all projects
* Only a user assigned on a project can edit/update/build/remove the project

h2. Project output files

If your project has any files that is passed on during test, be sure to setup the output directory on your project, so it's properly symlinked through the public folder.

NOTE: This requires your nginx/passenger etc to handle the html/png/txt files as they are not served by the app itself. (If your setup is correct, any static html/png files should be served before hitting the Bear app)

h2. Project log files

Same as for project output. Working on some sort of ANSI/HTML conversion with colours. Please do a pull-request if you know how to do this

h2. Skipping a build

Add [ci skip] in your commit message, and Bear CI will skip that build. same as Travis-ci does.

h3. Capybara

If you use either capybara-screenshot or call page.save_page("something.html"), you can view the files within the build on your Bear CI server. It requires you to setup Capybara.save_and_open_page_path to the same as you setup as project output folder.

h2. Future plans

It's up to what people want, but here are some thoughts:

* Improve Relation between projects/users. (Roles for users on site/projects)
* Removal of unused hooks, and perhaps implement new ones
* Multiple post hooks

h1. Deployment

Setup your database.yml

Copy bear.yml.sample to bear.yml and setup the parameters in the file.

See deploy.rb.example for a capistrano deployment example.

Deployment has been tested with nginx/puma and nginx/unicorn enviorment. Passenger hasn't been tested, but it should work.

h1. History

Bear evolved from BigTuna, as I needed a CI, and I wanted to run it on my own box

Bear is maintained by "Leif Ringstad":http://twitter.com/leifcr

BigTuna was originally created by "Micha≈Ç Bugno":http://twitter.com/michalbugno and "Antek Piechnik":http://twitter.com/antekpiechnik. A lot of have kindly contributed to make it a better project.

h1. Test Status 

!https://travis-ci.org/leifcr/bear.png?branch=master!:http://travis-ci.org/leifcr/bear

h1. License

bc.. Bear: Copyright (c) 2012 Leif Ringstad
BigTuna: Copyright (c) 2010  Michal Bugno, Antek Piechnik

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
